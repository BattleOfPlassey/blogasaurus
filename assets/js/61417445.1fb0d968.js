"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[5421],{3696:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var a=t(7874),s=t(4848),i=t(8453);const o={title:"GIT : God's way of semantic versioning",authors:["palash_programmer"],date:new Date("2022-07-31T18:30:00.000Z"),tags:["git","programming","vcs"],description:"Blog By Palash Shrivastava",hide_table_of_contents:!1,slug:"git-essentials",draft:!1,image:"https://avatars.githubusercontent.com/u/35087196?v=4"},l=void 0,r={authorsImageUrls:[void 0]},c=[{value:"1. GitLens",id:"1-gitlens",level:3},{value:"2. Moving or Migrating stashes from old computer to new.",id:"2-moving-or-migrating-stashes-from-old-computer-to-new",level:3},{value:"3. Delete branch on local and remote",id:"3-delete-branch-on-local-and-remote",level:3},{value:"4. Stage all files and commit in one line",id:"4-stage-all-files-and-commit-in-one-line",level:3},{value:"5. Take a fresh pull of an existing branch without resolving merge conflicts",id:"5-take-a-fresh-pull-of-an-existing-branch-without-resolving-merge-conflicts",level:3}];function h(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Here are some of the GIT hacks everyone should know of"}),"\n",(0,s.jsx)(n.h3,{id:"1-gitlens",children:"1. GitLens"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens",children:"GitLens"})," is a VSCode extension. This has been a lifesaver for me and my team. It works beautifully with vs code. I can compare commits, and code from different branches, check current blame by just hovering, manage stashes, check blame, heatmap, file changes, push & pull code, etc with so much ease."]}),"\n",(0,s.jsx)(n.h3,{id:"2-moving-or-migrating-stashes-from-old-computer-to-new",children:"2. Moving or Migrating stashes from old computer to new."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"First, List all your stashes."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git stash list\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Second, Export to Patch files. You'll have to specify your stash ID and provide a name for your patch file. Do this for all the stashes you want to move."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# stash@{0} is your stash id which is printed with above command, copy and paste below\ngit stash show -p stash@{0} > stash-name-0\ngit stash show -p stash@{1} > stash-name-1\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Patch files will be created in the current directory. Copy the patch file into the new directory on the new machine."}),"\n",(0,s.jsx)(n.li,{children:"Finally, Apply your stashes and finally Re-Stash them"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /new/project/dir\ngit apply stash-name-0\ngit stash\ngit apply stash-name-1\ngit stash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-delete-branch-on-local-and-remote",children:"3. Delete branch on local and remote"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# to delete branch on local repo\ngit branch -d <branch-name>\n\n# to push delete branch on remote after deleting on local\ngit push origin -d <branch-name>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-stage-all-files-and-commit-in-one-line",children:"4. Stage all files and commit in one line"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git commit -am "add all and commit"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-take-a-fresh-pull-of-an-existing-branch-without-resolving-merge-conflicts",children:"5. Take a fresh pull of an existing branch without resolving merge conflicts"}),"\n",(0,s.jsx)(n.p,{children:"Need to delete your local branch and re-fetch it cleanly from the remote."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'\n# Steps to Take Fresh Pull of an Existing Branch\n\n<Admonition type="warning">\n  This will discard all local changes in that branch. Make sure to back up anything you want to keep.\n</Admonition>\n\n# 1. Switch to another branch (like main or master)\ngit checkout main\n\n# 2. Delete the local branch (force delete, since it has conflicts)\ngit branch -D your-branch-name\n\n# 3. Fetch the latest branches from remote\ngit fetch origin\n\n# 4. Checkout the branch freshly from remote\ngit checkout -b your-branch-name origin/your-branch-name\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7874:e=>{e.exports=JSON.parse('{"permalink":"/git-essentials","source":"@site/blog/git-tricks-i-think-everyone-should-know.md","title":"GIT : God\'s way of semantic versioning","description":"Blog By Palash Shrivastava","date":"2022-07-31T18:30:00.000Z","tags":[{"inline":true,"label":"git","permalink":"/tags/git"},{"inline":true,"label":"programming","permalink":"/tags/programming"},{"inline":true,"label":"vcs","permalink":"/tags/vcs"}],"readingTime":1.86,"hasTruncateMarker":true,"authors":[{"name":"Palash Shrivastava","title":"Engineer","url":"https://github.com/battleofplassey","socials":{"x":"https://x.com/battleofplassey","linkedin":"https://www.linkedin.com/in/palash-shrivastava/","github":"https://github.com/battleofplassey"},"imageURL":"https://avatars.githubusercontent.com/u/35087196?v=4","key":"palash_programmer","page":null}],"frontMatter":{"title":"GIT : God\'s way of semantic versioning","authors":["palash_programmer"],"date":"2022-07-31T18:30:00.000Z","tags":["git","programming","vcs"],"description":"Blog By Palash Shrivastava","hide_table_of_contents":false,"slug":"git-essentials","draft":false,"image":"https://avatars.githubusercontent.com/u/35087196?v=4"},"unlisted":false,"prevItem":{"title":"Must use Apps for MAC","permalink":"/essential-tools-for-mac"},"nextItem":{"title":"Why You Should Not Develop a Mobile App","permalink":"/why-mobile-app"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);